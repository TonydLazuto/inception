# DRY (“Don’t Repeat Yourself”) principle
# there is no such thing as safely overriding a default value with the fastcgi_param directive

worker_processes auto;

events {
	worker_connections 1024;
}

http {

	# server {
	# 	listen 80;
	# 	listen [::]:80;
	# 	server_name		$DOMAIN_NAME;
	# 	return			301 https://$host$request_uri;
	# }

	server {

		listen 443 ssl default_server;
		listen [::]:443 ssl default_server;
		
		server_name         $DOMAIN_NAME;

		ssl on;
		ssl_certificate     /etc/nginx/ssl/key.crt;
		ssl_certificate_key /etc/nginx/ssl/mykey.key;
		ssl_protocols       TLSv1.3;
		# According to the Nginx documentation can
		# 1MB store about 4000 sessions
		# 20Megabytes here -> 80000 approximately sessions
		#ssl_session_cache shared: SSL:1m;
		#ssl_session_timeout 180m;

		index index.php index index.html index.htm index.nginx-debian.html;

		root /var/www/html;

		location / {
			fastcgi_index index.php;

			autoindex on;
			try_files $uri $uri/ =404;
		}

		location ~ \.php$ {
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			
			include snippets/fastcgi-php.conf;
			fastcgi_pass wordpress:9000;
			# In subsequent declaration wile including fastcgi file(s)
			# we can add fastcgi_param values without wiped them out
			include fastcgi_common;
		}
	}
}
